name: NIFTY50 realtime fetch

on:
  schedule:
    # Cron syntax: "min hour day month day_of_week"
    - cron: "*/5 3-10 * * 1-5"  # At every 5th minute from 50 through 59 past every hour from 3 through 9 on every day-of-week from Monday through Friday.
  workflow_dispatch:

jobs:
  run-script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Server/requirements.txt

      - name: Run the Python script
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_SCHEMA_REALTIME: ${{ secrets.SNOWFLAKE_SCHEMA_REALTIME }}
          SNOWFLAKE_TABLE_REALTIME: ${{ secrets.SNOWFLAKE_TABLE_REALTIME }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
        run: |
          python Server/Stock_Data/realtimeFetch.py
      - name: Check for changes in specific file
        id: check_changes
        run: |
          if git diff --quiet HEAD -- Server/Data_Files/last_run.json; then
            echo "No changes detected in last_run.json"
            echo "changes_detected=false" >> $GITHUB_ENV
          else
            echo "Changes detected in last_run.json"
            echo "changes_detected=true" >> $GITHUB_ENV
          fi
      - name: Configure Git
        run: |
          git config --global user.name "sik-sak"
          git config --global user.email "siksak2024@gmail.com"
      - name: Update timestamp
        if: env.changes_detected == 'true'
        run: |
            git add Server/Data_Files/last_run.json
            git commit -m "Updated latest timestamp"
      - name: Commit logs
        run: |
          git add Server/Logs/realtimeFetchLogs.log
          git commit -m "Updated logs on $(date '+%Y-%m-%d %H:%M:%S')"
      
      - name: Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push
